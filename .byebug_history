exit
square
exit
square
squere
exit
square
exit
line_index
exit
square
columns
rows
exit
@puzzle_string.delete("^0-9\n").lines.delete_if {|x| x == "\n" }.count
@puzzle_string.delete("^0-9\n").lines.delete_if {|x| x == "\n" } 
@puzzle_string.delete("^0-9\n").lines.delete_if {|x| x == "n" } 
@puzzle_string.delete("^0-9\n").lines.delete_if {|x| x == "/n" } 
@puzzle_string.delete("^0-9\n").lines..delete_if {|x| x == "/n" } 
@puzzle_string.delete("^0-9\n").lines
@puzzle_string.delete("^0-9\n").lines.count
@puzzle_string.delete("^0-9\n").lines
line
squares
line_index
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
continue
squares[line_index] += char
line_indexsquares[line_index] += char
char
squares[0]
line_index
squares
exit
Array.new(9, '')
line_index
continue
line_index
continue
line_index
continue
squares << char
line_index
char
exit
square
exit
columns.first.scan(/.{3}/)
columns.first.scan(/.{4}/)
columns.first..scan(/.{4}/)
columns.first
columns
exit
char
columns
index.zero?
exit
columns[0] += '1'exit
columns[0] += '1'
columns[0] += 1
columns[0]
columns << '1'
columns
index
exit
line.chomp.split('')
line.chomp.split()
line.chomp
line
char
continue
exit
line.chomp
line
index
continue
exit
@puzzle_string.delete("^0-9\n").lines.first.chomp!
@puzzle_string.delete("^0-9\n").lines.first.chomp
@puzzle_string.delete("^0-9\n").lines
@puzzle_string.delete("^0-9\n")
exit
@puzzle_string
@puzzle_string.tr!("0-9\n ", '')
@puzzle_string.tr!("^ULDRuldr0-9<>\t\r\n ", '')
@puzzle_string.tr!("^ULDRuldr0-9<>\t\r\n ", '').lines
@puzzle_string.tr!('^ULDRuldr0-9<>\t\r\n ', '').lines
@puzzle_string.tr!('^ULDRuldr0-9<>\t\r\n ', ).lines
@puzzle_string.tr!('^ULDRuldr0-9<>\t\r\n ').lines
@puzzle_string.delete('^ULDRuldr0-9<>\t\r\n ').lines
@puzzle_string.delete('^0-9').lines
@puzzle_string.delete('^0-9\n').lines
@puzzle_string.delete('^0-9\n')
@puzzle_string.lines().first.delete('^0-9\n')
@puzzle_string.lines().first.delete('^0-9')
@puzzle_string.lines().first
exit
@puzzle_string.lines().firstexi
@puzzle_string.lines().first
@puzzle_string.lines().fist
@puzzle_string.lines()
@puzzle_string.delete('^0-9\n').lines()
@puzzle_string.lines()
exit
'das'.empty?
''.empty?
''.any?
rows << line.delete('^0-9') if any?
exit
line.delete('^0-9')
continue
line.delete('^0-9')
line.chomp
continue
line.chomp
continue
line.chomp
continue
line.chomp
line
exit
 @puzzle_string.lines().count
 @puzzle_string.lines()
 @puzzle_string.split('\n').count
 @puzzle_string.split('\n')
 @puzzle_string
exit
continue
(0..9).include?(9)
(0..9).include?(0)
(0..9).include?('')
(1..10).include?('')
line
continue
numbers
numbers = 0..9
line
continue
@puzzle_string
self
